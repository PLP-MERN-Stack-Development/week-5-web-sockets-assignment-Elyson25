{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eliud\\\\Desktop\\\\EliChat-app\\\\week-5-web-sockets-assignment-Elyson25\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [allUsers, setAllUsers] = useState([]);\n  const [usersInRoom, setUsersInRoom] = useState([]);\n  const [currentChat, setCurrentChat] = useState({\n    name: 'General',\n    isPrivate: false\n  });\n  const [messages, setMessages] = useState({});\n  const [typingIndicator, setTypingIndicator] = useState('');\n  const [unreadCounts, setUnreadCounts] = useState({});\n  const [notificationPermission, setNotificationPermission] = useState(Notification.permission);\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n  const typingTimeoutRef = useRef(null);\n  const messageEndRef = useRef(null);\n  useEffect(() => {\n    var _messageEndRef$curren;\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, currentChat]);\n  const requestNotificationPermission = () => {\n    if (Notification.permission === 'default') {\n      Notification.requestPermission().then(permission => setNotificationPermission(permission));\n    }\n  };\n  const showBrowserNotification = (title, options) => {\n    const audio = new Audio('/notification.mp3');\n    audio.play().catch(error => console.log(\"Audio play failed, user interaction needed.\", error));\n    if (notificationPermission === 'granted' && document.hidden) {\n      new Notification(title, options);\n    }\n  };\n  useEffect(() => {\n    socket.on('initial_data', ({\n      rooms,\n      currentRoom,\n      usersInRoom,\n      allOnlineUsers\n    }) => {\n      setRooms(rooms);\n      setCurrentChat({\n        name: currentRoom,\n        isPrivate: false\n      });\n      setUsersInRoom(usersInRoom);\n      setAllUsers(allOnlineUsers);\n      setMessages({\n        [currentRoom]: []\n      });\n    });\n    socket.on('user_list_update', users => setUsersInRoom(users));\n    socket.on('full_user_list_update', users => setAllUsers(users));\n    const handleNewMessage = (message, chatIdentifier, notificationTitle, notificationBody) => {\n      setMessages(prev => ({\n        ...prev,\n        [chatIdentifier]: [...(prev[chatIdentifier] || []), message]\n      }));\n      if (currentChat.name !== chatIdentifier) {\n        setUnreadCounts(prev => ({\n          ...prev,\n          [chatIdentifier]: (prev[chatIdentifier] || 0) + 1\n        }));\n        showBrowserNotification(notificationTitle, {\n          body: notificationBody,\n          icon: '/favicon.ico'\n        });\n      }\n    };\n    socket.on('receive_message', message => handleNewMessage(message, message.room, `New message in #${message.room}`, `${message.sender}: ${message.text}`));\n    socket.on('receive_private_message', message => {\n      const chatPartner = message.sender === username ? message.recipient : message.sender;\n      handleNewMessage(message, chatPartner, `New message from @${message.sender}`, message.text);\n    });\n    const createNotificationMessage = (room, text) => {\n      const id = `notif-${Date.now()}`;\n      return {\n        id,\n        isNotification: true,\n        text,\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n    };\n    socket.on('user_joined', ({\n      room,\n      username: joinedUsername\n    }) => {\n      if (username && username !== joinedUsername) {\n        setMessages(prev => ({\n          ...prev,\n          [room]: [...(prev[room] || []), createNotificationMessage(room, `${joinedUsername} has joined.`)]\n        }));\n      }\n    });\n    socket.on('user_left', ({\n      room,\n      username: leftUsername\n    }) => {\n      setMessages(prev => ({\n        ...prev,\n        [room]: [...(prev[room] || []), createNotificationMessage(room, `${leftUsername} has left.`)]\n      }));\n    });\n    socket.on('user_typing', ({\n      username: typingUser,\n      context\n    }) => {\n      if (context === currentChat.name) setTypingIndicator(`${typingUser} is typing...`);\n    });\n    socket.on('user_stopped_typing', ({\n      username: typingUser,\n      context\n    }) => {\n      if (context === currentChat.name) setTypingIndicator('');\n    });\n    return () => {\n      socket.off();\n    };\n  }, [username, currentChat.name, notificationPermission, showBrowserNotification]);\n  const handleLogin = e => {\n    e.preventDefault();\n    if (username.trim()) {\n      socket.emit('login', username);\n      setIsLoggedIn(true);\n      requestNotificationPermission();\n    }\n  };\n  const selectChat = (name, isPrivate) => {\n    setTypingIndicator('');\n    setCurrentChat({\n      name,\n      isPrivate\n    });\n    if (!messages[name]) {\n      setMessages(prev => ({\n        ...prev,\n        [name]: []\n      }));\n    }\n    if (!isPrivate) {\n      socket.emit('join_room', name);\n    }\n    setUnreadCounts(prev => ({\n      ...prev,\n      [name]: 0\n    }));\n    setIsSidebarVisible(false);\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (currentMessage.trim()) {\n      const messageData = {\n        text: currentMessage,\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      const event = currentChat.isPrivate ? 'send_private_message' : 'send_room_message';\n      const payload = currentChat.isPrivate ? {\n        recipient: currentChat.name,\n        message: messageData\n      } : {\n        room: currentChat.name,\n        message: messageData\n      };\n      socket.emit(event, payload);\n      socket.emit('typing_stop', {\n        context: currentChat.name\n      });\n      if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n      setCurrentMessage('');\n    }\n  };\n  const handleTyping = e => {\n    setCurrentMessage(e.target.value);\n    socket.emit('typing_start', {\n      context: currentChat.name,\n      isPrivate: currentChat.isPrivate\n    });\n    if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n    typingTimeoutRef.current = setTimeout(() => {\n      socket.emit('typing_stop', {\n        context: currentChat.name\n      });\n    }, 2000);\n  };\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Join Real-Time Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Enter your username\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  const currentMessages = messages[currentChat.name] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarVisible ? 'visible' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectChat(room, false),\n          className: currentChat.name === room ? 'active' : '',\n          children: [\"# \", room, \" \", unreadCounts[room] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"unread-badge\",\n            children: unreadCounts[room]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 51\n          }, this)]\n        }, room, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Direct Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allUsers.filter(u => u !== username).map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectChat(user, true),\n          className: currentChat.name === user ? 'active' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"online-dot\",\n            children: \"\\u25CF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), \" \", user, \" \", unreadCounts[user] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"unread-badge\",\n            children: unreadCounts[user]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 87\n          }, this)]\n        }, user, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-toggle\",\n          onClick: () => setIsSidebarVisible(!isSidebarVisible),\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: currentChat.isPrivate ? `@ ${currentChat.name}` : `# ${currentChat.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), !currentChat.isPrivate && /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [usersInRoom.length, \" users online\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: [currentMessages.map(msg => msg.isNotification ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-item notification\",\n          children: msg.text\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-item ${msg.sender === username ? 'sent' : 'received'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [msg.sender !== username && /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: msg.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 47\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: msg.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: typingIndicator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"message-form\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentMessage,\n          onChange: handleTyping,\n          placeholder: `Message ${currentChat.isPrivate ? '@' : '#'}${currentChat.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nvFTYC5Ta7MBwp7PL1LGbYISpjU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","isLoggedIn","setIsLoggedIn","currentMessage","setCurrentMessage","rooms","setRooms","allUsers","setAllUsers","usersInRoom","setUsersInRoom","currentChat","setCurrentChat","name","isPrivate","messages","setMessages","typingIndicator","setTypingIndicator","unreadCounts","setUnreadCounts","notificationPermission","setNotificationPermission","Notification","permission","isSidebarVisible","setIsSidebarVisible","typingTimeoutRef","messageEndRef","_messageEndRef$curren","current","scrollIntoView","behavior","requestNotificationPermission","requestPermission","then","showBrowserNotification","title","options","audio","Audio","play","catch","error","console","log","document","hidden","on","currentRoom","allOnlineUsers","users","handleNewMessage","message","chatIdentifier","notificationTitle","notificationBody","prev","body","icon","room","sender","text","chatPartner","recipient","createNotificationMessage","id","Date","now","isNotification","timestamp","toLocaleTimeString","hour","minute","joinedUsername","leftUsername","typingUser","context","off","handleLogin","e","preventDefault","trim","emit","selectChat","handleSendMessage","messageData","event","payload","clearTimeout","handleTyping","target","value","setTimeout","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","autoFocus","currentMessages","map","onClick","filter","u","user","length","msg","ref","_c","$RefreshReg$"],"sources":["C:/Users/eliud/Desktop/EliChat-app/week-5-web-sockets-assignment-Elyson25/client/src/App.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './App.css';\r\n\r\nconst socket = io('http://localhost:3001');\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [currentMessage, setCurrentMessage] = useState('');\r\n  const [rooms, setRooms] = useState([]);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [usersInRoom, setUsersInRoom] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState({ name: 'General', isPrivate: false });\r\n  const [messages, setMessages] = useState({});\r\n  const [typingIndicator, setTypingIndicator] = useState('');\r\n  const [unreadCounts, setUnreadCounts] = useState({});\r\n  const [notificationPermission, setNotificationPermission] = useState(Notification.permission);\r\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\r\n\r\n  const typingTimeoutRef = useRef(null);\r\n  const messageEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, currentChat]);\r\n\r\n  const requestNotificationPermission = () => {\r\n    if (Notification.permission === 'default') {\r\n      Notification.requestPermission().then(permission => setNotificationPermission(permission));\r\n    }\r\n  };\r\n\r\n  const showBrowserNotification = (title, options) => {\r\n    const audio = new Audio('/notification.mp3');\r\n    audio.play().catch(error => console.log(\"Audio play failed, user interaction needed.\", error));\r\n\r\n    if (notificationPermission === 'granted' && document.hidden) {\r\n      new Notification(title, options);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('initial_data', ({ rooms, currentRoom, usersInRoom, allOnlineUsers }) => {\r\n      setRooms(rooms);\r\n      setCurrentChat({ name: currentRoom, isPrivate: false });\r\n      setUsersInRoom(usersInRoom);\r\n      setAllUsers(allOnlineUsers);\r\n      setMessages({ [currentRoom]: [] });\r\n    });\r\n\r\n    socket.on('user_list_update', (users) => setUsersInRoom(users));\r\n    socket.on('full_user_list_update', (users) => setAllUsers(users));\r\n\r\n    const handleNewMessage = (message, chatIdentifier, notificationTitle, notificationBody) => {\r\n      setMessages(prev => ({\r\n        ...prev,\r\n        [chatIdentifier]: [...(prev[chatIdentifier] || []), message]\r\n      }));\r\n      if (currentChat.name !== chatIdentifier) {\r\n        setUnreadCounts(prev => ({ ...prev, [chatIdentifier]: (prev[chatIdentifier] || 0) + 1 }));\r\n        showBrowserNotification(notificationTitle, { body: notificationBody, icon: '/favicon.ico' });\r\n      }\r\n    };\r\n\r\n    socket.on('receive_message', (message) => handleNewMessage(message, message.room, `New message in #${message.room}`, `${message.sender}: ${message.text}`));\r\n    socket.on('receive_private_message', (message) => {\r\n      const chatPartner = message.sender === username ? message.recipient : message.sender;\r\n      handleNewMessage(message, chatPartner, `New message from @${message.sender}`, message.text);\r\n    });\r\n    \r\n    const createNotificationMessage = (room, text) => {\r\n        const id = `notif-${Date.now()}`;\r\n        return {\r\n            id,\r\n            isNotification: true,\r\n            text,\r\n            timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n        }\r\n    };\r\n\r\n    socket.on('user_joined', ({ room, username: joinedUsername }) => {\r\n      if (username && username !== joinedUsername) {\r\n        setMessages(prev => ({\r\n          ...prev,\r\n          [room]: [...(prev[room] || []), createNotificationMessage(room, `${joinedUsername} has joined.`)]\r\n        }));\r\n      }\r\n    });\r\n\r\n    socket.on('user_left', ({ room, username: leftUsername }) => {\r\n      setMessages(prev => ({\r\n        ...prev,\r\n        [room]: [...(prev[room] || []), createNotificationMessage(room, `${leftUsername} has left.`)]\r\n      }));\r\n    });\r\n\r\n    socket.on('user_typing', ({ username: typingUser, context }) => {\r\n      if (context === currentChat.name) setTypingIndicator(`${typingUser} is typing...`);\r\n    });\r\n\r\n    socket.on('user_stopped_typing', ({ username: typingUser, context }) => {\r\n      if (context === currentChat.name) setTypingIndicator('');\r\n    });\r\n\r\n    return () => {\r\n      socket.off();\r\n    };\r\n  }, [username, currentChat.name, notificationPermission, showBrowserNotification]);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim()) {\r\n      socket.emit('login', username);\r\n      setIsLoggedIn(true);\r\n      requestNotificationPermission();\r\n    }\r\n  };\r\n\r\n  const selectChat = (name, isPrivate) => {\r\n    setTypingIndicator('');\r\n    setCurrentChat({ name, isPrivate });\r\n    if (!messages[name]) {\r\n      setMessages(prev => ({ ...prev, [name]: [] }));\r\n    }\r\n    if (!isPrivate) {\r\n      socket.emit('join_room', name);\r\n    }\r\n    setUnreadCounts(prev => ({ ...prev, [name]: 0 }));\r\n    setIsSidebarVisible(false);\r\n  };\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (currentMessage.trim()) {\r\n      const messageData = {\r\n        text: currentMessage,\r\n        timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n      };\r\n      const event = currentChat.isPrivate ? 'send_private_message' : 'send_room_message';\r\n      const payload = currentChat.isPrivate ? { recipient: currentChat.name, message: messageData } : { room: currentChat.name, message: messageData };\r\n\r\n      socket.emit(event, payload);\r\n      socket.emit('typing_stop', { context: currentChat.name });\r\n      if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\r\n      setCurrentMessage('');\r\n    }\r\n  };\r\n\r\n  const handleTyping = (e) => {\r\n    setCurrentMessage(e.target.value);\r\n    socket.emit('typing_start', { context: currentChat.name, isPrivate: currentChat.isPrivate });\r\n    if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\r\n    typingTimeoutRef.current = setTimeout(() => {\r\n      socket.emit('typing_stop', { context: currentChat.name });\r\n    }, 2000);\r\n  };\r\n\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <div className=\"login-container\">\r\n        <form onSubmit={handleLogin}>\r\n          <h1>Join Real-Time Chat</h1>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Enter your username\" autoFocus />\r\n          <button type=\"submit\">Join</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentMessages = messages[currentChat.name] || [];\r\n\r\n  return (\r\n    <div className=\"chat-wrapper\">\r\n      <div className={`sidebar ${isSidebarVisible ? 'visible' : ''}`}>\r\n        <h2>Rooms</h2>\r\n        <ul>\r\n          {rooms.map(room => (\r\n            <li key={room} onClick={() => selectChat(room, false)} className={currentChat.name === room ? 'active' : ''}>\r\n              # {room} {unreadCounts[room] > 0 && <span className=\"unread-badge\">{unreadCounts[room]}</span>}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <h2>Direct Messages</h2>\r\n        <ul>\r\n          {allUsers.filter(u => u !== username).map(user => (\r\n            <li key={user} onClick={() => selectChat(user, true)} className={currentChat.name === user ? 'active' : ''}>\r\n              <span className=\"online-dot\">●</span> {user} {unreadCounts[user] > 0 && <span className=\"unread-badge\">{unreadCounts[user]}</span>}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"chat-area\">\r\n        <div className=\"chat-header\">\r\n          <button className=\"menu-toggle\" onClick={() => setIsSidebarVisible(!isSidebarVisible)}>☰</button>\r\n          <h3>{currentChat.isPrivate ? `@ ${currentChat.name}` : `# ${currentChat.name}`}</h3>\r\n          {!currentChat.isPrivate && <small>{usersInRoom.length} users online</small>}\r\n        </div>\r\n        <div className=\"message-list\">\r\n          {currentMessages.map((msg) => (\r\n            msg.isNotification ? (\r\n              <div key={msg.id} className=\"message-item notification\">{msg.text}</div>\r\n            ) : (\r\n              <div key={msg.id} className={`message-item ${msg.sender === username ? 'sent' : 'received'}`}>\r\n                <div className=\"message-content\">\r\n                  {msg.sender !== username && <strong>{msg.sender}</strong>}\r\n                  <p>{msg.text}</p>\r\n                  <span>{msg.timestamp}</span>\r\n                </div>\r\n              </div>\r\n            )\r\n          ))}\r\n          <div ref={messageEndRef} />\r\n        </div>\r\n        <div className=\"typing-indicator\">{typingIndicator}</div>\r\n        <form className=\"message-form\" onSubmit={handleSendMessage}>\r\n          <input type=\"text\" value={currentMessage} onChange={handleTyping} placeholder={`Message ${currentChat.isPrivate ? '@' : '#'}${currentChat.name}`} />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}